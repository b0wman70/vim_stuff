" basics
set nocompatible              " be iMproved
set tabstop=2                 " set tab=2 spaces
set expandtab                 " convert tab to spaces
set number relativenumber
set noswapfile
set mouse=
language en_US.UTF-8
set wildmenu
set nowrap
" Copy to system clipboard as well
set clipboard+=unnamed


" syntax
syntax on
filetype plugin on
set showmatch
" use % to match tag (like brackets match)
runtime macros/matchit.vim
autocmd BufNewFile,BufRead *.jspf set filetype=jsp "consider jspf as jsp

set autoindent
set smartindent
set shiftwidth=2

set incsearch

" when yank a visual block put the cursor at the and of visual block
vnoremap y y'>

" add closing brakets
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap (      ()<Left>
inoremap (<CR>  (<CR>)<Esc>O

" to autocomplete
inoremap <C-Space> <C-x><C-o>

" easy splitted windows navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" like yy but without <CR> and trailing spaces
nnoremap ys ^y$ 

" open new split panes to right and bottom
set splitbelow
set splitright

" if not installed install vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -kfLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" The first time, to install plugins, launch :PlugInstall
call plug#begin('~/.vim/plugged')

Plug 'mhinz/vim-startify'
"Plug 'https://github.com/ycm-core/YouCompleteMe.git'

" fzf plugin (it must be installed fzf)
"Plug 'junegunn/fzf.vim'
"Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }

Plug 'https://github.com/ctrlpvim/ctrlp.vim.git'
Plug 'slarwise/vim-tmux-send'
Plug 'https://tpope.io/vim/surround.git'
Plug 'https://tpope.io/vim/commentary.git'
Plug 'https://github.com/gregsexton/MatchTag.git'
Plug 'https://github.com/itchyny/lightline.vim'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'uiiaoo/java-syntax.vim' 
Plug 'https://github.com/tpope/vim-fugitive.git'
call plug#end()

" For coloured lightline: "export TERM=xterm-256color"
set noshowmode     " the bottom bar is now unecessary
set laststatus=2   " always display statusbar

" fzf
"nnoremap <silent> <C-f> :Files<CR>

" vim-tmux-send
nnoremap Q :SendLine<CR>

" to use this colorsxcheme you have first to install it (https://github.com/gosukiwi/vim-atom-dark) 
" if empty(glob('~/.vim/colors/atom-dark.vim'))
"   silent !curl -kfLo /tmp/master.zip https://github.com/gosukiwi/vim-atom-dark/archive/master.zip
"   silent !unzip /tmp/master.zip
"   silent !cp vim-atom-dark-master/colors/* ~/.vim/colors/
" endif
"colorscheme atom-dark-256

" dracula colorscheme
let g:dracula_colorterm = 0
set background=dark
colorscheme dracula
"colorscheme PaperColor

